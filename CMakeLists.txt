cmake_minimum_required(VERSION 3.11)

# Detect if being bundled via sub-directory.
if(NOT DEFINED PROJECT_NAME)
  set(KBASE_NOT_SUBPROJECT ON)
endif()

project(KBase CXX)

set_property(GLOBAL PROPERTY USE_FOLDERS ON)

if(KBASE_NOT_SUBPROJECT)
  set(CMAKE_CXX_STANDARD 14)
  set(CMAKE_CXX_STANDARD_REQUIRED ON)
  set(CMAKE_CXX_EXTENSIONS OFF)

  set(ROOT_DIR ${CMAKE_SOURCE_DIR})
  set(DEPS_SOURCE_DIR ${ROOT_DIR}/build/deps)
  set(DEPS_DEPLOY_DIR ${CMAKE_BINARY_DIR})
endif()

if(KBASE_NOT_SUBPROJECT)
  set(KBASE_CODE_ANALYSIS_DEFAULT ON)
else()
  set(KBASE_CODE_ANALYSIS_DEFAULT OFF)
endif()

option(KBASE_ENABLE_CODE_ANALYSIS "Enable code analysis" ${KBASE_CODE_ANALYSIS_DEFAULT})
message(STATUS "KBASE_ENABLE_CODE_ANALYSIS = " ${KBASE_ENABLE_CODE_ANALYSIS})

if(KBASE_NOT_SUBPROJECT)
  option(KBASE_BUILD_UNITTESTS "Build kbase unittests" ON)
  message(STATUS "KBASE_BUILD_UNITTESTS = " ${KBASE_BUILD_UNITTESTS})
endif()

set(KBASE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
set(KBASE_DEPS_DIR ${KBASE_DIR}/deps)
set(KBASE_CMAKE_DIR ${KBASE_DIR}/cmake)

include(${KBASE_CMAKE_DIR}/dependency_manager.cmake)

include(${KBASE_CMAKE_DIR}/cotire.cmake)
set(KBASE_PCH_HEADER ${KBASE_DIR}/build/pch/precompile.h)

#Compiler and output configurations.
if(MSVC)
  include(${KBASE_CMAKE_DIR}/compiler_msvc.cmake)
  foreach(OUTPUTCONFIG_TYPE ${CMAKE_CONFIGURATION_TYPES})
    string(TOUPPER ${OUTPUTCONFIG_TYPE} OUTPUTCONFIG)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/${OUTPUTCONFIG_TYPE}/bin)
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/${OUTPUTCONFIG_TYPE}/lib)
  endforeach()
else()
  include(${KBASE_CMAKE_DIR}/compiler_posix.cmake)
  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
  set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
endif()

add_subdirectory(kbase)

if (KBASE_NOT_SUBPROJECT AND KBASE_BUILD_UNITTESTS)
  add_subdirectory(tests)
endif()
